<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="..\..\1.1\release\nunit.framework.tests.dll" total="388" failures="0" not-run="0" date="2007-03-02" time="21:26:07">
  <environment nunit-version="2.4.0.0" clr-version="2.0.50727.42" os-version="Microsoft Windows NT 5.1.2600 Service Pack 2" platform="Win32NT" cwd="D:\Dev\NUnit\nunit-2.4\build\net\2.0\release" machine-name="FERRARI" user="Charlie" user-domain="FERRARI" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite name="..\..\1.1\release\nunit.framework.tests.dll" success="True" time="1.078" asserts="0">
    <results>
      <test-suite name="NUnit" success="True" time="1.078" asserts="0">
        <results>
          <test-suite name="Framework" success="True" time="1.078" asserts="0">
            <results>
              <test-suite name="Constraints" success="True" time="0.125" asserts="0">
                <results>
                  <test-suite name="Tests" success="True" time="0.125" asserts="0">
                    <results>
                      <test-suite name="AllItemsTests" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Constraints.Tests.AllItemsTests.AllItemsAreInRange" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.AllItemsTests.AllItemsAreInRangeFailureMessage" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="NUnit.Framework.Constraints.Tests.AllItemsTests.AllItemsAreInstancesOfType" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.AllItemsTests.AllItemsAreInstancesOfTypeFailureMessage" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Constraints.Tests.AllItemsTests.AllItemsAreNotNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.AllItemsTests.AllItemsAreNotNullFails" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="AndTest" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Constraints.Tests.AndTest.CanCombineTestsWithAndOperator" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.AndTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Constraints.Tests.AndTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.AndTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="NUnit.Framework.Constraints.Tests.AndTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="AssignableFromTest" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Constraints.Tests.AssignableFromTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.AssignableFromTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.AssignableFromTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Constraints.Tests.AssignableFromTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="CollectionContainsTests" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Constraints.Tests.CollectionContainsTests.CanTestContentsOfArray" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.CollectionContainsTests.CanTestContentsOfArrayList" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.CollectionContainsTests.CanTestContentsOfSortedList" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="EmptyTest" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Constraints.Tests.EmptyTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Constraints.Tests.EmptyTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.EmptyTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Constraints.Tests.EmptyTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="EndsWithTest" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Constraints.Tests.EndsWithTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="NUnit.Framework.Constraints.Tests.EndsWithTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.EndsWithTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Constraints.Tests.EndsWithTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="EndsWithTestIgnoringCase" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Constraints.Tests.EndsWithTestIgnoringCase.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="NUnit.Framework.Constraints.Tests.EndsWithTestIgnoringCase.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.EndsWithTestIgnoringCase.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Constraints.Tests.EndsWithTestIgnoringCase.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="EqualIgnoringCaseTest" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Constraints.Tests.EqualIgnoringCaseTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Framework.Constraints.Tests.EqualIgnoringCaseTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.EqualIgnoringCaseTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Constraints.Tests.EqualIgnoringCaseTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="EqualTest" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Constraints.Tests.EqualTest.FailedStringMatchShowsFailurePosition" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Constraints.Tests.EqualTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Constraints.Tests.EqualTest.LongStringsAreTruncated" executed="True" success="True" time="0.031" asserts="2" />
                          <test-case name="NUnit.Framework.Constraints.Tests.EqualTest.LongStringsAreTruncatedAtBothEndsIfNecessary" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Constraints.Tests.EqualTest.LongStringsAreTruncatedAtFrontEndIfNecessary" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Constraints.Tests.EqualTest.NANsCompareAsEqual" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.EqualTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.EqualTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Constraints.Tests.EqualTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="ExactTypeTest" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Constraints.Tests.ExactTypeTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Constraints.Tests.ExactTypeTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.ExactTypeTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Constraints.Tests.ExactTypeTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="GreaterThanOrEqualTest" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Constraints.Tests.GreaterThanOrEqualTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Constraints.Tests.GreaterThanOrEqualTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.GreaterThanOrEqualTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Constraints.Tests.GreaterThanOrEqualTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="GreaterThanTest" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Constraints.Tests.GreaterThanTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Framework.Constraints.Tests.GreaterThanTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.GreaterThanTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Constraints.Tests.GreaterThanTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="InstanceOfTypeTest" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Constraints.Tests.InstanceOfTypeTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.InstanceOfTypeTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.InstanceOfTypeTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Constraints.Tests.InstanceOfTypeTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="LessThanOrEqualTest" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Constraints.Tests.LessThanOrEqualTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Constraints.Tests.LessThanOrEqualTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.LessThanOrEqualTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Constraints.Tests.LessThanOrEqualTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="LessThanTest" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Constraints.Tests.LessThanTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Framework.Constraints.Tests.LessThanTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.LessThanTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Constraints.Tests.LessThanTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="NotTest" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Constraints.Tests.NotTest.CanUseNotOperator" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.NotTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.NotTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.NotTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Constraints.Tests.NotTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="OrTest" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Constraints.Tests.OrTest.CanCombineTestsWithOrOperator" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.OrTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.OrTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.OrTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Constraints.Tests.OrTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="SameAsTest" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Constraints.Tests.SameAsTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Constraints.Tests.SameAsTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.SameAsTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Constraints.Tests.SameAsTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="StartsWithTest" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Constraints.Tests.StartsWithTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="NUnit.Framework.Constraints.Tests.StartsWithTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.StartsWithTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Constraints.Tests.StartsWithTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="StartsWithTestIgnoringCase" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Constraints.Tests.StartsWithTestIgnoringCase.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="NUnit.Framework.Constraints.Tests.StartsWithTestIgnoringCase.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.StartsWithTestIgnoringCase.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Constraints.Tests.StartsWithTestIgnoringCase.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="SubstringTest" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Constraints.Tests.SubstringTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Framework.Constraints.Tests.SubstringTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.SubstringTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Constraints.Tests.SubstringTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="SubstringTestIgnoringCase" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Constraints.Tests.SubstringTestIgnoringCase.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Framework.Constraints.Tests.SubstringTestIgnoringCase.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Constraints.Tests.SubstringTestIgnoringCase.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Constraints.Tests.SubstringTestIgnoringCase.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Tests" success="True" time="0.953" asserts="0">
                <results>
                  <test-suite name="ArrayEqualsFailureMessageFixture" success="True" time="0.125" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.ActualArrayIsLonger" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.ArrayAndCollection_Failure" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.ArraysDeclaredAsDifferentTypes" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.ArraysHaveDifferentRanks" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.ArraysWithDifferentDimensionsAsCollection" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.ArraysWithDifferentRanksAsCollection" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.DifferentArrayTypesEqualFails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.DoubleDimensionedArrays" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.ExpectedArrayIsLonger" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.FailureOnSingleDimensionedArrays" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.FiveDimensionedArrays" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.JaggedArrayComparedToSimpleArray" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.JaggedArrays" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.SameLengthDifferentContent" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.TripleDimensionedArrays" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="ArrayEqualsFixture" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArrayAndCollection" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArrayIsEqualToItself" executed="True" success="True" time="0.016" asserts="3" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArrayOfIntAndArrayOfDouble" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArraysDeclaredAsDifferentTypes" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArraysOfArrays" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArraysOfDecimal" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArraysOfDouble" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArraysOfInt" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArraysOfMixedTypes" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArraysOfString" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArraysPassedAsObjects" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArraysWithDifferentDimensionsMatchedAsCollection" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArraysWithDifferentRanksComparedAsCollection" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.DoubleDimensionedArrays" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.FiveDimensionedArrays" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.JaggedArrays" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.TripleDimensionedArrays" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="ArrayNotEqualFixture" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.ArrayNotEqualFixture.ArraysDeclaredAsDifferentTypes" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="NUnit.Framework.Tests.ArrayNotEqualFixture.DifferentLengthArrays" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="NUnit.Framework.Tests.ArrayNotEqualFixture.SameLengthDifferentContent" executed="True" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="AssertExtensionTests" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.AssertExtensionTests.OddNumber" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertExtensionTests.OddNumberFails" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="AssertionTest" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.AssertionTest.AssertByte" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.AssertEquals" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.AssertEqualsFail" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.AssertEqualsNaNFails" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.AssertEqualsNull" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.AssertEqualsSameTypes" executed="True" success="True" time="0.016" asserts="21" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.AssertEqualsTestCaseFail" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.AssertNanEqualsFails" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.AssertNanEqualsNaNSucceeds" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.AssertNegInfinityEqualsInfinity" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.AssertNull" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.AssertNullNotEqualsNull" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.AssertPosInfinityEqualsInfinity" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.AssertPosInfinityNotEquals" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.AssertPosInfinityNotEqualsNegInfinity" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.AssertSame" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.AssertSameFails" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.AssertShort" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.AssertSingle" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.AssertSinglePosInfinityNotEqualsNegInfinity" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.AssertString" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.Bug1076043AreEqualsNotTransitiveForDecimal" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.Bug561909FailInheritsFromSystemException" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.Bug575936Int32Int64Comparison" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.Fail" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.FailAssertFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.FailAssertNotNull" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.IntegerLongComparison" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.SucceedAssertFail" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertionTest.SucceedAssertNotNull" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="AssertSyntaxTests" success="True" time="0.266" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.AllItemsTests" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.AndOperator" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.AssignableFromTypeTests" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.CollectionContainsTests" executed="True" success="True" time="0.016" asserts="8" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.CollectionEquivalenceTests" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.ComparisonTests" executed="True" success="True" time="0.000" asserts="16" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.ComplexTests" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.EmptyCollectionTests" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.EmptyStringTests" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.EndsWithTests" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.EqualIgnoringCaseTests" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.EqualityTests" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.EqualityTestsWithTolerance" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.ExactTypeTests" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.InstanceOfTypeTests" executed="True" success="True" time="0.016" asserts="4" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.IsFalse" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.IsNaN" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.IsNotNull" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.IsNull" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.IsTrue" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.NotOperator" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.NotTests" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.OrOperator" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.RegularExpressionTests" executed="True" success="True" time="0.094" asserts="6" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.StartsWithTests" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.SubsetTests" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.SubstringTests" executed="True" success="True" time="0.000" asserts="5" />
                    </results>
                  </test-suite>
                  <test-suite name="CollectionAssertTest" success="True" time="0.063" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.AreEqual" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.AreEqual_HandlesNull" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.AreEqualFail" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.AreEqualFailCount" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.AreEquivalentHandlesNull" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.AreNotEqual" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.AreNotEqual_Fails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.AreNotEqual_HandlesNull" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.Contains" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.ContainsFails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.ContainsFails_Empty" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.DoesNotContain" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.DoesNotContain_Empty" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.DoesNotContain_Fails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.Equivalent" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.EquivalentFailOne" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.EquivalentFailTwo" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.IsNotSubsetOf" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.IsNotSubsetOf_Fails" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.IsNotSubsetOfHandlesNull" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.IsSubsetOf" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.IsSubsetOf_Fails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.IsSubsetOfHandlesNull" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.ItemsNotNull" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.ItemsNotNullFailure" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.ItemsOfType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.ItemsOfTypeFailure" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.NotEquivalent" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.NotEquivalent_Fails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.NotEquivalentHandlesNull" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.Unique" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.CollectionAssertTest.UniqueFailure" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="ConditionAssertTests" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsEmpty" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsEmptyFailsOnNonEmptyArray" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsEmptyFailsOnNullString" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsEmptyFailsOnString" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsFalseFails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsNaN" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsNaNFails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsNotEmpty" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsNotEmptyFailsOnEmptyArray" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsNotEmptyFailsOnEmptyArrayList" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsNotEmptyFailsOnEmptyHashTable" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsNotEmptyFailsOnEmptyString" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsNotNull" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsNotNullFails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsNull" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsNullFails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsTrueFails" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="EqualsFixture" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.Bug575936Int32Int64Comparison" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.Byte" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.DateTimeEqual" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.DateTimeNotEqual" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.Decimal" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.DoubleNotEqualMessageDisplaysAllDigits" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.DoubleNotEqualMessageDisplaysTolerance" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.EnumsEqual" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.EnumsNotEqual" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.Equals" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.EqualsFail" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.EqualsNaNFails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.EqualsNull" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.EqualsSameTypes" executed="True" success="True" time="0.000" asserts="21" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.EqualsThrowsException" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.Float" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.FloatNotEqualMessageDisplaysAllDigits" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.FloatNotEqualMessageDisplaysTolerance" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.Int" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.IntegerEquals" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.IntegerLongComparison" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.NanEqualsFails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.NanEqualsNaNSucceeds" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.NegInfinityEqualsInfinity" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.PosInfinityEqualsInfinity" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.PosInfinityNotEquals" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.PosInfinityNotEqualsNegInfinity" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.ReferenceEqualsThrowsException" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.Short" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.SinglePosInfinityNotEqualsNegInfinity" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.String" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.EqualsFixture.UInt" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="FileAssertTests" success="True" time="0.250" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.FileAssertTests.AreEqualFailsWhenOneIsNull" executed="True" success="True" time="0.063" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.FileAssertTests.AreEqualFailsWithFileInfos" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.FileAssertTests.AreEqualFailsWithFiles" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.FileAssertTests.AreEqualFailsWithStreams" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.FileAssertTests.AreEqualFailsWithTextFilesAfterReadingBothFiles" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.FileAssertTests.AreEqualPassesUsingSameFileTwice" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.FileAssertTests.AreEqualPassesWhenBothAreNull" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.FileAssertTests.AreEqualPassesWithFileInfos" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.FileAssertTests.AreEqualPassesWithFiles" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.FileAssertTests.AreEqualPassesWithStreams" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.FileAssertTests.AreEqualPassesWithTextFiles" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.FileAssertTests.AreNotEqualFailsWhenBothAreNull" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.FileAssertTests.AreNotEqualFailsWithFileInfos" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.FileAssertTests.AreNotEqualFailsWithFiles" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.FileAssertTests.AreNotEqualFailsWithStreams" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.FileAssertTests.AreNotEqualIteratesOverTheEntireFile" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.FileAssertTests.AreNotEqualIteratesOverTheEntireFileAndFails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.FileAssertTests.AreNotEqualPassesIfOneIsNull" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.FileAssertTests.AreNotEqualPassesWithFileInfos" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.FileAssertTests.AreNotEqualPassesWithFiles" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.FileAssertTests.AreNotEqualPassesWithStreams" executed="True" success="True" time="0.047" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="GreaterEqualFixture" success="True" time="0.063" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.GreaterEqualFixture.FailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="NUnit.Framework.Tests.GreaterEqualFixture.GreaterOrEqual_Decimal" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.GreaterEqualFixture.GreaterOrEqual_Double" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.GreaterEqualFixture.GreaterOrEqual_Float" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.GreaterEqualFixture.GreaterOrEqual_Int32" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.GreaterEqualFixture.GreaterOrEqual_UInt32" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.GreaterEqualFixture.NotGreaterEqualIComparable" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.GreaterEqualFixture.NotGreaterOrEqual" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="GreaterFixture" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.GreaterFixture.FailureMessage" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.GreaterFixture.Greater" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="NUnit.Framework.Tests.GreaterFixture.NotGreater" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.GreaterFixture.NotGreaterIComparable" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.GreaterFixture.NotGreaterWhenEqual" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="LessEqualFixture" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.LessEqualFixture.FailureMessage" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.LessEqualFixture.LessOrEqual" executed="True" success="True" time="0.000" asserts="30" />
                      <test-case name="NUnit.Framework.Tests.LessEqualFixture.NotLessEqualIComparable" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.LessEqualFixture.NotLessOrEqual" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="LessFixture" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.LessFixture.FailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="NUnit.Framework.Tests.LessFixture.Less" executed="True" success="True" time="0.016" asserts="14" />
                      <test-case name="NUnit.Framework.Tests.LessFixture.NotLess" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.LessFixture.NotLessIComparable" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.LessFixture.NotLessWhenEqual" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="ListContentsTests" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.ListContentsTests.ArrayFails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ListContentsTests.ArrayListFails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ListContentsTests.ArrayListSucceeds" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="NUnit.Framework.Tests.ListContentsTests.ArraySucceeds" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="NUnit.Framework.Tests.ListContentsTests.DifferentTypesFail" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ListContentsTests.EmptyArrayFails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.ListContentsTests.NullArrayFails" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="MsgUtilTests" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.MsgUtilTests.TestConvertWhitespace" executed="True" success="True" time="0.000" asserts="14" />
                    </results>
                  </test-suite>
                  <test-suite name="MyAssertionFailureMessage+FailureMessageFixture" success="True" time="0.047" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.MyAssertionFailureMessage+FailureMessageFixture.DisplayListElements" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="NUnit.Framework.Tests.MyAssertionFailureMessage+FailureMessageFixture.TestClipAroundPosition" executed="True" success="True" time="0.000" asserts="26" />
                      <test-case name="NUnit.Framework.Tests.MyAssertionFailureMessage+FailureMessageFixture.TestClipAroundPosition2" executed="True" success="True" time="0.000" asserts="80" />
                      <test-case name="NUnit.Framework.Tests.MyAssertionFailureMessage+FailureMessageFixture.TestConvertWhitespace" executed="True" success="True" time="0.016" asserts="14" />
                      <test-case name="NUnit.Framework.Tests.MyAssertionFailureMessage+FailureMessageFixture.TestFormatMessageForArraysNotEqual" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="NUnit.Framework.Tests.MyAssertionFailureMessage+FailureMessageFixture.TestFormatMessageForFailNotEquals" executed="True" success="True" time="0.000" asserts="13" />
                      <test-case name="NUnit.Framework.Tests.MyAssertionFailureMessage+FailureMessageFixture.TestFormatMessageForFailNotEqualsIgnoringCase" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.MyAssertionFailureMessage+FailureMessageFixture.TestFormatMessageForFailNotEqualsNewlines2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="NUnit.Framework.Tests.MyAssertionFailureMessage+FailureMessageFixture.TestInputsAreStrings" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="NUnit.Framework.Tests.MyAssertionFailureMessage+FailureMessageFixture.TestStringLengthsDiffer" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.MyAssertionFailureMessage+FailureMessageFixture.TestStringLengthsDiffer2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.MyAssertionFailureMessage+FailureMessageFixture.TestStringLengthsDiffer3" executed="True" success="True" time="0.016" asserts="995" />
                    </results>
                  </test-suite>
                  <test-suite name="NotEqualFixture" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.NotEqualFixture.ArraysNotEqual" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.NotEqualFixture.ArraysNotEqualFails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.NotEqualFixture.NotEqual" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.NotEqualFixture.NotEqualFails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.NotEqualFixture.NotEqualSameTypes" executed="True" success="True" time="0.016" asserts="21" />
                      <test-case name="NUnit.Framework.Tests.NotEqualFixture.NullEqualsNull" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.NotEqualFixture.NullNotEqualToNonNull" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.NotEqualFixture.UInt" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="NotSameFixture" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.NotSameFixture.NotSame" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.NotSameFixture.NotSameFails" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="SameFixture" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.SameFixture.Same" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.SameFixture.SameFails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.SameFixture.SameValueTypes" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="StringAssertTests" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.StringAssertTests.CaseInsensitiveCompare" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.StringAssertTests.CaseInsensitiveCompareFails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.StringAssertTests.Contains" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="NUnit.Framework.Tests.StringAssertTests.ContainsFails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.StringAssertTests.EndsWith" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.StringAssertTests.EndsWithFails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.StringAssertTests.IsMatch" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.StringAssertTests.IsMatchFails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.StringAssertTests.StartsWith" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.StringAssertTests.StartsWithFails" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="TestMessageWriterTests" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.TestMessageWriterTests.ConnectorIsWrittenWithSurroundingSpaces" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.TestMessageWriterTests.PredicateIsWrittenWithTrailingSpace" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="TestMessageWriterTests+ActualValueTests" success="True" time="0.063" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.TestMessageWriterTests+ActualValueTests.DecimalIsWrittenToTwentyNineDigits" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.TestMessageWriterTests+ActualValueTests.DecimalIsWrittenWithTrailingM" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.TestMessageWriterTests+ActualValueTests.DoubleIsWrittenToSeventeenDigits" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.TestMessageWriterTests+ActualValueTests.DoubleIsWrittenWithTrailingD" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.TestMessageWriterTests+ActualValueTests.FloatIsWrittenToNineDigits" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.TestMessageWriterTests+ActualValueTests.FloatIsWrittenWithTrailingF" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.TestMessageWriterTests+ActualValueTests.IntegerIsWrittenAsIs" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.TestMessageWriterTests+ActualValueTests.StringIsWrittenWithQuotes" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="TestMessageWriterTests+ExpectedValueTests" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.TestMessageWriterTests+ExpectedValueTests.DecimalIsWrittenToTwentyNineDigits" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.TestMessageWriterTests+ExpectedValueTests.DecimalIsWrittenWithTrailingM" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.TestMessageWriterTests+ExpectedValueTests.DoubleIsWrittenToSeventeenDigits" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.TestMessageWriterTests+ExpectedValueTests.DoubleIsWrittenWithTrailingD" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.TestMessageWriterTests+ExpectedValueTests.FloatIsWrittenToNineDigits" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.TestMessageWriterTests+ExpectedValueTests.FloatIsWrittenWithTrailingF" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.TestMessageWriterTests+ExpectedValueTests.IntegerIsWrittenAsIs" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.TestMessageWriterTests+ExpectedValueTests.StringIsWrittenWithQuotes" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="TypeAssertTests" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="NUnit.Framework.Tests.TypeAssertTests.ExactType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.TypeAssertTests.ExactTypeFails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.TypeAssertTests.IsAssignableFrom" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="NUnit.Framework.Tests.TypeAssertTests.IsAssignableFromFails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.TypeAssertTests.IsInstanceOfType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NUnit.Framework.Tests.TypeAssertTests.IsInstanceOfTypeFails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.TypeAssertTests.IsNotAssignableFrom" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="NUnit.Framework.Tests.TypeAssertTests.IsNotAssignableFromFails" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.TypeAssertTests.IsNotInstanceOfType" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NUnit.Framework.Tests.TypeAssertTests.IsNotInstanceOfTypeFails" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>